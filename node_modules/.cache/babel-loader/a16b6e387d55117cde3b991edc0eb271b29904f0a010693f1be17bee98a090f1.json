{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"content\"\n};\nconst _hoisted_3 = {\n  class: \"left\"\n};\nconst _hoisted_4 = {\n  class: \"right\"\n};\nconst _hoisted_5 = {\n  class: \"top\"\n};\nconst _hoisted_6 = {\n  class: \"bottom\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_RecipeForm = _resolveComponent(\"RecipeForm\");\n  const _component_NutritionOutput = _resolveComponent(\"NutritionOutput\");\n  const _component_TasteOutput = _resolveComponent(\"TasteOutput\");\n  const _component_CostOutput = _resolveComponent(\"CostOutput\");\n  const _component_ChatBot = _resolveComponent(\"ChatBot\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"header\", null, [_createElementVNode(\"h1\", null, \"KimchiLabX\")], -1)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_RecipeForm, {\n    onSubmitRecipe: $options.updateRecipe\n  }, null, 8, [\"onSubmitRecipe\"])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_NutritionOutput, {\n    ingredients: $data.ingredients\n  }, null, 8, [\"ingredients\"]), _createVNode(_component_TasteOutput, {\n    ingredients: $data.ingredients\n  }, null, 8, [\"ingredients\"])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_CostOutput, {\n    ingredients: $data.ingredients\n  }, null, 8, [\"ingredients\"]), _createVNode(_component_ChatBot)])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_RecipeForm","onSubmitRecipe","$options","updateRecipe","_hoisted_4","_hoisted_5","_component_NutritionOutput","ingredients","$data","_component_TasteOutput","_hoisted_6","_component_CostOutput","_component_ChatBot"],"sources":["C:\\Users\\yth98\\Documents\\KimchiLabX\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <header>\r\n      <h1>KimchiLabX</h1>\r\n    </header>\r\n    <div class=\"content\">\r\n      <div class=\"left\">\r\n        <RecipeForm @submit-recipe=\"updateRecipe\" />\r\n      </div>\r\n      <div class=\"right\">\r\n        <div class=\"top\">\r\n          <NutritionOutput :ingredients=\"ingredients\" />\r\n          <TasteOutput :ingredients=\"ingredients\" />\r\n        </div>\r\n        <div class=\"bottom\">\r\n          <CostOutput :ingredients=\"ingredients\" />\r\n          <ChatBot /> <!-- 단가 계산 아래에 챗봇 배치 -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport RecipeForm from \"./components/RecipeForm.vue\";\r\nimport CostOutput from \"./components/CostOutput.vue\";\r\nimport NutritionOutput from \"./components/NutritionOutput.vue\";\r\nimport TasteOutput from \"./components/TasteOutput.vue\";\r\nimport ChatBot from \"./components/ChatBot.vue\"; // 챗봇 추가\r\n\r\nexport default {\r\n  components: {\r\n    RecipeForm,\r\n    CostOutput,\r\n    NutritionOutput,\r\n    TasteOutput,\r\n    ChatBot\r\n  },\r\n  data() {\r\n    return {\r\n      ingredients: []\r\n    };\r\n  },\r\n  methods: {\r\n    updateRecipe(newIngredients) {\r\n      this.ingredients = newIngredients;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Google Fonts */\r\n@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&family=Noto+Sans+KR:wght@300;400;600&display=swap\");\r\n\r\n* {\r\n  font-family: \"Inter\", \"Noto Sans KR\", sans-serif;\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n}\r\nheader {\r\n  text-align: center;\r\n  background-color: #f8f8f8;\r\n  padding: 10px 0;\r\n  border-bottom: 2px solid #ddd;\r\n}\r\nh1 {\r\n  font-size: 26px;\r\n  font-weight: 600;\r\n  color: #333;\r\n  letter-spacing: 0.5px;\r\n}\r\n.content {\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: flex-start;\r\n}\r\n.left {\r\n  width: 50%;\r\n  padding: 15px;\r\n  background-color: #f8f8f8;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n}\r\n.right {\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n}\r\n.top {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n}\r\n.top > * {\r\n  width: 48%;\r\n}\r\n.bottom {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px; /* 단가 계산과 챗봇 사이 여백 추가 */\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAIfA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAM;;EAGZA,KAAK,EAAC;AAAO;;EACXA,KAAK,EAAC;AAAK;;EAIXA,KAAK,EAAC;AAAQ;;;;;;;uBAbzBC,mBAAA,CAmBM,OAnBNC,UAmBM,G,0BAlBJC,mBAAA,CAES,iBADPA,mBAAA,CAAmB,YAAf,YAAU,E,QAEhBA,mBAAA,CAcM,OAdNC,UAcM,GAbJD,mBAAA,CAEM,OAFNE,UAEM,GADJC,YAAA,CAA4CC,qBAAA;IAA/BC,cAAa,EAAEC,QAAA,CAAAC;EAAY,gC,GAE1CP,mBAAA,CASM,OATNQ,UASM,GARJR,mBAAA,CAGM,OAHNS,UAGM,GAFJN,YAAA,CAA8CO,0BAAA;IAA5BC,WAAW,EAAEC,KAAA,CAAAD;EAAW,8BAC1CR,YAAA,CAA0CU,sBAAA;IAA5BF,WAAW,EAAEC,KAAA,CAAAD;EAAW,6B,GAExCX,mBAAA,CAGM,OAHNc,UAGM,GAFJX,YAAA,CAAyCY,qBAAA;IAA5BJ,WAAW,EAAEC,KAAA,CAAAD;EAAW,8BACrCR,YAAA,CAAWa,kBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}