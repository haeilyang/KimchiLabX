{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"taste-output\"\n};\nconst _hoisted_2 = {\n  ref: \"radarChart\"\n};\nconst _hoisted_3 = {\n  class: \"warnings\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"맛 프로파일\", -1)), _createElementVNode(\"canvas\", _hoisted_2, null, 512), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.tasteWarnings, (warning, index) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: index,\n      class: \"warning-text\"\n    }, \" ⚠️ \" + _toDisplayString(warning), 1);\n  }), 128))])]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$options","tasteWarnings","warning","index","key","_toDisplayString"],"sources":["C:\\Users\\yth98\\Documents\\KimchiLabX\\src\\components\\TasteOutput.vue"],"sourcesContent":["<template>\r\n  <div class=\"taste-output\">\r\n    <h3>맛 프로파일</h3>\r\n    <canvas ref=\"radarChart\"></canvas>\r\n    <div class=\"warnings\">\r\n      <p v-for=\"(warning, index) in tasteWarnings\" :key=\"index\" class=\"warning-text\">\r\n        ⚠️ {{ warning }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Chart, registerables } from \"chart.js\";\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n  props: {\r\n    ingredients: Array\r\n  },\r\n  data() {\r\n    return {\r\n      baseTasteFactors: {\r\n        \"절임배추\": { sweetness: 2, saltiness: 6, sourness: 5, umami: 2, spiciness: 1 },\r\n        \"무\": { sweetness: 6, saltiness: 2, sourness: 2, umami: 1, spiciness: 0 },\r\n        \"마늘\": { sweetness: 1, saltiness: 3, sourness: 1, umami: 4, spiciness: 3 },\r\n        \"생강\": { sweetness: 2, saltiness: 1, sourness: 3, umami: 2, spiciness: 6 },\r\n        \"고춧가루\": { sweetness: 1, saltiness: 2, sourness: 1, umami: 3, spiciness: 9 },\r\n        \"대파\": { sweetness: 3, saltiness: 1, sourness: 1, umami: 2, spiciness: 2 },\r\n        \"양파\": { sweetness: 5, saltiness: 1, sourness: 2, umami: 3, spiciness: 1 },\r\n        \"쪽파\": { sweetness: 2, saltiness: 1, sourness: 1, umami: 3, spiciness: 3 },\r\n        \"갓\": { sweetness: 1, saltiness: 3, sourness: 3, umami: 2, spiciness: 5 },\r\n        \"부추\": { sweetness: 3, saltiness: 2, sourness: 2, umami: 3, spiciness: 4 },\r\n        \"다시육수\": { sweetness: 3, saltiness: 4, sourness: 1, umami: 6, spiciness: 0 },\r\n        \"찹쌀풀\": { sweetness: 4, saltiness: 1, sourness: 1, umami: 2, spiciness: 0 },\r\n        \"멸치액젓\": { sweetness: 0, saltiness: 9, sourness: 2, umami: 7, spiciness: 0 },\r\n        \"새우젓\": { sweetness: 2, saltiness: 8, sourness: 2, umami: 6, spiciness: 0 },\r\n        \"황석어젓\": { sweetness: 1, saltiness: 9, sourness: 3, umami: 8, spiciness: 0 },\r\n        \"갈치젓\": { sweetness: 2, saltiness: 8, sourness: 2, umami: 7, spiciness: 0 },\r\n        \"정백당\": { sweetness: 9, saltiness: 0, sourness: 0, umami: 0, spiciness: 0 },\r\n        \"미원\": { sweetness: 1, saltiness: 2, sourness: 0, umami: 9, spiciness: 0 }\r\n      },\r\n      variantTasteModifiers: {\r\n        \"절임배추\": {\r\n          \"저염절임\": { saltiness: -2, sourness: -1 },\r\n          \"고염절임\": { saltiness: +2, sourness: +1 }\r\n        },\r\n        \"고춧가루\": {\r\n          \"보통맛\": { spiciness: 7 },\r\n          \"중간맛\": { spiciness: 8 },\r\n          \"매운맛\": { spiciness: 9 }\r\n        }\r\n      },\r\n      seasonTasteModifiers: {\r\n        \"절임배추\": {\r\n          \"봄작형\": { sweetness: +1 },\r\n          \"가을작형\": { sourness: +1 }\r\n        },\r\n        \"무\": {\r\n          \"봄작형\": { sweetness: +2 },\r\n          \"겨울작형\": { sweetness: +3, sourness: -1 }\r\n        }\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    tasteProfile() {\r\n      let totals = { sweetness: 0, saltiness: 0, sourness: 0, umami: 0, spiciness: 0 };\r\n\r\n      this.ingredients.forEach(ing => {\r\n        let baseFactor = this.baseTasteFactors[ing.type] || {};\r\n        let variantFactor = this.variantTasteModifiers[ing.type]?.[ing.variant] || {};\r\n        let seasonFactor = this.seasonTasteModifiers[ing.type]?.[ing.season] || {};\r\n\r\n        Object.keys(totals).forEach(key => {\r\n          let baseValue = baseFactor[key] || 0;\r\n          let variantValue = variantFactor[key] || 0;\r\n          let seasonValue = seasonFactor[key] || 0;\r\n\r\n          totals[key] += (baseValue + variantValue + seasonValue) * (ing.percentage / 100);\r\n        });\r\n      });\r\n\r\n      return Object.values(totals).map(val => Math.min(10, val.toFixed(2))); // 0~10 정규화\r\n    },\r\n    tasteWarnings() {\r\n      const labels = [\"단맛\", \"짠맛\", \"신맛\", \"감칠맛\", \"매운맛\"];\r\n      return this.tasteProfile\r\n        .map((val, index) => {\r\n          if (val < 2) return `${labels[index]} 값이 너무 낮습니다. (현재: ${val})`;\r\n          if (val > 5) return `${labels[index]} 값이 너무 높습니다. (현재: ${val})`;\r\n          return null;\r\n        })\r\n        .filter(warning => warning !== null);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.renderChart();\r\n  },\r\n  watch: {\r\n    tasteProfile() {\r\n      this.renderChart();\r\n    }\r\n  },\r\n  methods: {\r\n    renderChart() {\r\n      if (this.chart) this.chart.destroy();\r\n      this.chart = new Chart(this.$refs.radarChart, {\r\n        type: \"radar\",\r\n        data: {\r\n          labels: [\"단맛\", \"짠맛\", \"신맛\", \"감칠맛\", \"매운맛\"],\r\n          datasets: [{\r\n            data: this.tasteProfile,\r\n            fill: true,\r\n            borderColor: \"rgba(255, 99, 132, 1)\",\r\n            backgroundColor: \"rgba(255, 99, 132, 0.2)\"\r\n          }]\r\n        },\r\n        options: {\r\n          plugins: {\r\n            legend: { display: false } // 범례 제거\r\n          },\r\n          scales: {\r\n            r: {\r\n              min: 0,\r\n              max: 10\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.taste-output {\r\n  border: 1px solid #ddd;\r\n  text-align: center;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\ncanvas {\r\n  max-width: 250px;\r\n  max-height: 250px;\r\n}\r\n.warnings {\r\n  margin-top: 10px;\r\n  padding: 5px;\r\n  text-align: center;\r\n}\r\n.warning-text {\r\n  color: red;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EAEfC,GAAG,EAAC;AAAY;;EACnBD,KAAK,EAAC;AAAU;;uBAHvBE,mBAAA,CAQM,OARNC,UAQM,G,0BAPJC,mBAAA,CAAe,YAAX,QAAM,QACVA,mBAAA,CAAkC,UAAlCC,UAAkC,cAClCD,mBAAA,CAIM,OAJNE,UAIM,I,kBAHJJ,mBAAA,CAEIK,SAAA,QAPVC,WAAA,CAKoCC,QAAA,CAAAC,aAAa,EALjD,CAKiBC,OAAO,EAAEC,KAAK;yBAAzBV,mBAAA,CAEI;MAF0CW,GAAG,EAAED,KAAK;MAAEZ,KAAK,EAAC;OAAe,MAC1E,GAAAc,gBAAA,CAAGH,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}